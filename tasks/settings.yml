---
# Set the password-restrictions to a low level.
- name: "[SETTINGS] - Disable password expiration for the Administrator account."
  ansible.builtin.command: samba-tool user setexpiry Administrator --noexpiry
  changed_when: true
  tags:
    - settings

- name: "[SETTINGS] - Disable password history at the domain level."
  ansible.builtin.command: samba-tool domain passwordsettings set --"{{ item.setting }}"="{{ item.value }}"
  loop:
    - { setting: "complexity", value: "off" }
    - { setting: "min-pwd-age", value: "0" }
    - { setting: "max-pwd-age", value: "0" }
    - { setting: "min-pwd-length", value: "4" }
    - { setting: "history-length", value: "0" }
  changed_when: true
  tags:
    - settings

# Export all configured keytabs.
# see ansible-docs at playbooks_tests#type-tests for how to identify list type of variable.
- name: "[SETTINGS] - Create SPN if not (implicit) existent."
  ansible.builtin.command: >
    samba-tool spn add "{{ item.0.service }}/{{ item.1 }}@{{ sambadc_realm | upper }}" "{{ item.1 | split('.') | first }}$"
  register: df_cmd
  changed_when: (df_cmd.rc == 0)
  failed_when: (df_cmd.rc != 0) and (df_cmd.stderr | lower) is not search("already")
  loop: "{{ sambadc_exportkeytab | subelements('principals') }}"
  when:
    - (item.1 | lower) not in sambadc_implicit_spn
    - (sambadc_exportkeytab is not string) and (sambadc_exportkeytab is not mapping) and (sambadc_exportkeytab is sequence)
  tags:
    - settings

- name: "[SETTINGS] - Export configured keytabs to PRIVATEDIR."
  ansible.builtin.command: >
    samba-tool domain exportkeytab "{{ PRIVATE_DIR }}/{{ item.0.keytabfilename }}"
       --principal="{{ item.0.service }}/{{ item.1 }}"
  register: df_cmd
  changed_when: (df_cmd.rc == 0) and (df_cmd.stdout | lower) is search("export")
  loop: "{{ sambadc_exportkeytab | subelements('principals') }}"
  when: (sambadc_exportkeytab is not string) and (sambadc_exportkeytab is not mapping) and (sambadc_exportkeytab is sequence)
  tags:
    - settings

- name: "[SETTINGS] - Copy configured keytabs to the configured directories."
  ansible.builtin.copy:
    src: "{{ PRIVATE_DIR }}/{{ item.keytabfilename }}"
    dest: "{{ item.destination[0] }}"
    owner: "{{ item.destination[1] }}"
    group: "{{ item.destination[2] }}"
    mode: "{{ item.destination[3] }}"
    remote_src: true
  loop: "{{ sambadc_exportkeytab }}"
  when:
    - (sambadc_exportkeytab is not string) and (sambadc_exportkeytab is not mapping) and (sambadc_exportkeytab is sequence)
    - (item.destination is defined) and (item.destination | length) == 4
  tags:
    - settings

# Set the SeDiskOperatorPrivilege for user Administrator
- name: "[SETTINGS] - Set SeDiskOperatorPrivilege for 'Domain Admins'-group."
  ansible.builtin.command: >
    net rpc rights grant "{{ sambadc_workgroup + '\Domain Admins' }}" SeDiskOperatorPrivilege --user "{{ sambadc_workgroup + '\Administrator' }}"
  args:
    stdin: "{{ sambadc_admin_password }}"
  changed_when: true
  tags:
    - settings
