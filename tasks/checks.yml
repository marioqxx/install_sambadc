---
# After Provisioning, perform checks if the DC is up and running.
# Perform checks as to DNS resolution.
- name: "[CHECK] - DNS-Loockup DC-services: ldap, TCP"
  ansible.builtin.command: testparm -s /etc/samba/smb.conf
  changed_when: false
  tags:
    - check

- name: "[CHECK] - DNS-Loockup DC-services: ldap, TCP"
  ansible.builtin.command: host -t SRV "_ldap._tcp.{{ sambadc_realm }}"
  changed_when: false
  tags:
    - check

- name: "[CHECK] - DNS-Loockup DC-services: kerberos, UDP"
  ansible.builtin.command: host -t SRV "_kerberos._udp.{{ sambadc_realm }}"
  changed_when: false
  tags:
    - check

- name: "[CHECK] - DNS-Loockup DC-services: gc, TCP"
  ansible.builtin.command: host -t SRV "_gc._tcp.{{ sambadc_realm }}"
  changed_when: false
  tags:
    - check

- name: "[CHECK] - DNS-Loockup A-Record of DC, returns IP-Address."
  ansible.builtin.command: host -t A "{{ sambadc_fqdn }}"
  register: df_cmd
  changed_when: false
  tags:
    - check

- name: "[CHECK] - DNS-Reverse-Loockup DC (ipv4 only)."
  ansible.builtin.command: host "{{ df_cmd.stdout | regex_findall('[0-9]+.[0-9]+.[0-9]+.[0-9]+') | join }}"
  failed_when: false
  changed_when: false
  tags:
    - check

- name: "[CHECK] - DNS-Loockup checking configured forward DNS-server."
  ansible.builtin.command: host -t A "{{ sambadc_check_forwardzone_host }}"
  failed_when: false
  changed_when: false
  tags:
    - check

- name: "[CHECK] - Check presence of DNS-tool nsupdate command from dnsutils."
  ansible.builtin.command: nsupdate -V
  changed_when: false
  tags:
    - check

- name: "[CHECK] - Check DNS-update functionality."
  ansible.builtin.command: samba_dnsupdate --all-names
  changed_when: false
  tags:
    - check

# Perform checks as to Kerberos.
- name: "[CHECK] - Check Kerberos authentication."
  tags:
    - check
  block:
    - name: "[CHECK] - Kerberos Request a ticket."
      ansible.builtin.shell: |
        set -o pipefail
        echo {{ sambadc_admin_password }} | kinit -c /tmp/krb5cc_1000 Administrator@{{ sambadc_realm | upper }}
      args:
        executable: /bin/bash
      changed_when: false

    - name: "[CHECK] - Kerberos check ticket in Cache."
      ansible.builtin.command: klist -c /tmp/krb5cc_1000
      failed_when: false
      changed_when: false

    # Perform connection check
    # Does not work (yet) due tho this issue: https://groups.google.com/g/linux.debian.bugs.dist/c/aNuQQ77KLzk
    # - name: "[CHECK] - Test connection via Kerveros authentication."
    #  ansible.builtin.command: smbclient -L "{{ sambadc_fqdn }}" --use-krb5-ccache=/tmp/krb5cc_1000
    #  failed_when: false
    #  changed_when: false

  # Always delete the Kerberos ticket form the Credential-Cache.
  always:
    - name: "[CHECK] - Kerberos destroy ticket Cache."
      ansible.builtin.command: kdestroy -c /tmp/krb5cc_1000
      changed_when: false

- name: "[CHECK] - Test anonymous connect to DC."
  ansible.builtin.command: smbclient -L localhost -N
  changed_when: false
  tags:
    - check

- name: "[CHECK] - Check if smbclient-version supports commandline --password option."
  ansible.builtin.command: smbclient
  register: df_cmd
  failed_when: false
  changed_when: false
  tags:
    - check

# Commandline option --password for smbclient only available form 4.15 on.
- name: "[CHECK] - Test connection via username/password (smbclient with --password commandline option."
  when: df_cmd.stdout is search("--password")
  tags:
    - check
  block:
    - name: "[CHECK] - Test connection via usaername/password (smbclient with password-option)."
      ansible.builtin.command: smbclient -L "{{ sambadc_fqdn }}" -U Administrator --password="{{ sambadc_admin_password }}"
      changed_when: false

    - name: "[CHECK] - Test connection to netlogon via username/password (smbclient with password-option)."
      ansible.builtin.command: smbclient //"{{ sambadc_fqdn }}"/netlogon -c "ls" -U Administrator --password="{{ sambadc_admin_password }}"
      changed_when: false

# Needed for pre 4.15 Version of samba.
- name: "[CHECK] - Test connection via username/password (smbclient without --password commandline option)."
  when: df_cmd.stdout is not search("--password")
  tags:
    - check
  block:
    - name: "[CHECK] - Test connection via usaername/password (smbclient without password-option)."
      ansible.builtin.shell: |
        set -o pipefail
        echo {{ sambadc_admin_password }} | smbclient -L "{{ sambadc_fqdn }}" -U Administrator
      args:
        executable: /bin/bash
      changed_when: false

    - name: "[CHECK] - Test connection to netlogon via username/password (smbclient without password-option)."
      ansible.builtin.shell: |
        set -o pipefail
        echo {{ sambadc_admin_password }} | smbclient -L "{{ sambadc_fqdn }}" -U Administrator
      args:
        executable: /bin/bash
      changed_when: false

# Check SSL access to LDAP (if configured).
- name: "[CHECK] - Check certificate verification and chain of trust."
  tags:
    - check
  when:
    - sambadc_tls_ca is defined
  block:
    - name: "[CHECK] - Connect via openssl s_client from localhost."
      ansible.builtin.shell: |
        set -o pipefail
        echo "Q" | openssl s_client -brief -CAfile "{{ PRIVATE_DIR }}"/tls/"{{ sambadc_tls_ca | basename }}" -connect localhost:636
      args:
        executable: /bin/bash
      register: df_cmd
      changed_when: false

    - name: "[CHECK] - Check if Certificate chain of trust was OK."
      ansible.builtin.assert:
        that:
          - df_cmd.stdout is not match("Verification: OK")
        msg: "Certificate verification failed."

    - name: "[CHECK] - Connect via openssl s_client from localhost and use of system installed trusted root-CA."
      ansible.builtin.shell: |
        set -o pipefail
        echo "Q" | openssl s_client -brief -connect localhost:636
      args:
        executable: /bin/bash
      register: df_cmd
      changed_when: false
      when: sambadc_tls_ca_install_system

    - name: "[CHECK] - Check if Certificate chain of trust was OK."
      ansible.builtin.assert:
        that:
          - df_cmd.stdout is not match("Verification: OK")
        msg: "Certificate verification failed."
      when: sambadc_tls_ca_install_system

    - name: "[CHECK] - Connect via openssl s_client from control-host."
      ansible.builtin.shell: |
        set -o pipefail
        echo "Q" | openssl s_client -brief -CAfile {{ sambadc_tls_ca }} -connect {{ sambadc_fqdn }}:636
      delegate_to: localhost
      become: false
      args:
        executable: /bin/bash
      register: df_cmd
      changed_when: false

    - name: "[CHECK] - Check if Certificate chain of trust was OK."
      ansible.builtin.assert:
        that:
          - df_cmd.stdout is not match("Verification: OK")
        msg: "Certificate verification failed."

    # If this check fails, then call ldapsearch with -d 1 and check the certificate.
    # The Common-name and the canonicalized hostname potentially do not match.
    - name: "[CHECK] - Make an ldapsearch query for user-names."
      ansible.builtin.command:
        ldapsearch -H ldaps://localhost:636 -b "cn=Users,{{ sambadc_ldap }}"
                   -D "cn=Administrator,cn=Users,{{ sambadc_ldap }}"
                   -w "{{ sambadc_admin_password }}"
                   -s sub "(objectClass=group)"
      register: df_cmd
      changed_when: false
